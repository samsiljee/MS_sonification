---
title: "The Sound of Science"
author: "Sam Siljee"
date: 9 Oct 2024
format:
  revealjs:
    transition: slide
    logo: Gillies McIndoe Horizantal Colour Logo RGB Transparent.png
editor: visual
---

```{r, echo = FALSE}
library(tidyverse)
source("../functions.R")
spectrum <- read.csv("spectrum_1.csv")
theme_set(theme_void())
```

## Outline

-   Background and why
-   How
-   Implications

## Big data

-   Picture here of boring data, overwhelming

. . .

-   Too big for excel

. . .

-   Picture of me trying to wrestle data into a suitcase

. . .

-   Picture of obscure plots looking at MS stuff

. . .

- The creative response

## Light spectrum

![](Dispersive_prism.png){width=100%}

## Mass spectrum

![](Basic_Mass_Spectrometer.jpg){width=100%}

## What does the data look like

```{r}
spectrum %>%
  ggplot(aes(x = mz, y = intensity)) +
  geom_col() +
  theme_bw()
```

But there's a third dimension...

## Coersion

-   Tone
-   Pitch
-   Quantisation

. . .

-   Honour the original data

## Sonification process

![](instruments.jpg)

Fourier theorem: any complex waveform can be made up from the addition of simpler waveforms of different frequencies

## {auto-animate=true}

```{r waves 2}
data.frame(
  x = 1:1000,
  y_1 = sin(0.1 * 1:1000),
  y_2 = cos(0.02 * 1:1000)
) %>%
  mutate(y_3 = (y_1 + y_2) / max(abs(y_1 + y_2))) %>%
  ggplot() +
  geom_line(aes(x = x, y = y_1 + -0.6), linewidth = 2) +
  geom_line(aes(x = x, y = y_2 + 0.8*2), linewidth = 2) +
  # geom_line(aes(x = x, y = y_3 + 2*2), col = "darkgreen", linewidth = 2) +
  theme_void()
```

## {auto-animate=true}

```{r waves 3}
data.frame(
  x = 1:1000,
  y_1 = sin(0.1 * 1:1000),
  y_2 = cos(0.02 * 1:1000)
) %>%
  mutate(y_3 = (y_1 + y_2) / max(abs(y_1 + y_2))) %>%
  ggplot() +
  geom_line(aes(x = x, y = y_1 + -0.6), linewidth = 2) +
  geom_line(aes(x = x, y = y_2 + 0.8*2), linewidth = 2) +
  geom_line(aes(x = x, y = y_3 + 2*2), col = "darkgreen", linewidth = 2) +
  theme_void()
```

## {auto-animate=true}

```{r spectrum repeat}
spectrum %>%
  ggplot(aes(x = mz, y = intensity)) +
  geom_col() +
  theme_bw()
```

## {auto-animate=true}

```{r spectrum waveform}
data.frame(
  x = 1:2000,
  y = spectrum_to_waveform(spectrum)[34601:36600]
) %>%
  ggplot() +
  geom_line(aes(x = x, y = y), linewidth = 2, col = "darkgreen")
```

![Spectrum tone](long_tone_1.wav)

## Putting it all together

![](video.mp4)

## Complexity

-   Emergent properties

## Interpretation

-   AI and directly engaging with the data
-   Methodology vs biology

## Practical Implications

-   Vision impaired scientists
-   Teaching mass spectrometry
-   Approachability
-   New ideas have to start somewhere

## Where to Next

-   Bringing the biology back
-   Present at the Australasian computer music conference
-   Publication in Leonardo
-   Working with artists

## Acknowledgements

-   Gillies McIndoe Research Institute
-   Te Herenga Waka - Victoria University of Wellington
-   Wellington Doctoral Scholarship

. . .

Contact: samsiljee@gmail.com

Code: github.com/samsiljee/MS_sonification

Make your own tones: samsiljee.shinyapps.io/Tonification_shiny/
